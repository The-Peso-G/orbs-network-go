version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:latest
    resource_class: large
    steps:
      - checkout
      - run: ./git-submodule-checkout.sh
      - run: ./.circleci/gopath.sh
      - run: cd /go/src/github.com/orbs-network/orbs-network-go/ && ./test.sh
      - store_artifacts:
          path: /go/src/github.com/orbs-network/orbs-network-go/_logs
      - store_artifacts:
          path: /go/src/github.com/orbs-network/orbs-network-go/_out
      - store_test_results:
          path: /go/src/github.com/orbs-network/orbs-network-go/_out

  flakiness:
    docker:
      - image: circleci/golang:latest
    resource_class: xlarge
    steps:
      - checkout
      - run: ./git-submodule-checkout.sh
      - run: ./.circleci/gopath.sh
      - run:
          # remove logs if the test was successful for quicker feedback loop
          # TODO filter for errors and save them regardless
          command: |
            cd /go/src/github.com/orbs-network/orbs-network-go/

            ./test.flakiness.sh
            EXIT_CODE=$?

            sudo chown -R circleci:circleci _logs

            if [ $EXIT_CODE != 0 ]; then
              ./.circleci/upload-node-metrics.sh
              find _logs/acceptance -type f -delete
            else
              ./.circleci/archive-logs.sh
            fi

            exit $EXIT_CODE
          no_output_timeout: 25m
      - store_artifacts:
          path: /go/src/github.com/orbs-network/orbs-network-go/_logs

  build-docker-image:
    machine: true
    steps:
      - checkout
      - run: ./git-submodule-checkout.sh
      - run:
          command: SKIP_TESTS=true ./docker/build/build.sh
      - run: docker tag orbs:export $DOCKER_IMAGE:$(./docker/tag.sh)
      - run: $(aws ecr get-login --no-include-email --region us-west-2)
      - run: docker push $DOCKER_IMAGE
      - store_artifacts:
          path: _logs


  notify_github_about_dashboard:
    machine: true
    steps:
      - checkout
      - run: python ./.circleci/post-dashboard-link.py

  success:
    machine: true
    steps:
      - run: echo 'Success'

  deploy_testnet:
    machine: true
    steps:
      - checkout
      - run: $(aws ecr get-login --no-include-email --region us-west-2)
      - run: docker pull $DOCKER_IMAGE:master
      - run: ./.circleci/deploy-testnet.sh

  e2e_testnet:
    machine: true
    steps:
      - checkout
      - run: ./git-submodule-checkout.sh
      - run: ./docker/build/build.sh
      - run: ./.circleci/e2e-testnet.sh

  release_gamma:
    machine: true
    steps:
      - checkout
      - run: ./git-submodule-checkout.sh
      - run: ./docker/build/build.sh
      - run: ./.circleci/release-gamma.sh

workflows:
  version: 2
  build:
    jobs:
      - build
#      - build-docker-image
#      - flakiness
#      - notify_github_about_dashboard
#      - success:
#          requires:
#            - build
#            - flakiness
#      - deploy_testnet:
#          requires:
#            - success
#          filters:
#            branches:
#              only:
#                - master
#      - e2e_testnet:
#          requires:
#            - deploy_testnet
#          filters:
#            branches:
#              only:
#                - master
#      - release_gamma:
#          filters:
#            tags:
#              only: /^v.*/
#            branches:
#              ignore: /.*/
